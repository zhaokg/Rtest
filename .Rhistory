fillColor = ~fill_color,
fillOpacity = 0.5) %>%
addMarkers(lng = -93.95508,
lat = 41.77131,
options = markerOptions(draggable = TRUE)) %>%
#addProviderTiles('Esri.WorldImagery') %>%
addTiles( )
})
observeEvent(input$map_marker_dragend, {
print(input$map_marker_dragend)
})
observeEvent(input$map_shape_click, {
print(input$map_shape_click$lat)
print(input$map_shape_click$lng)
leafletProxy("map") %>%  clearGroup(group="highlight")
id = input$map_shape_click$id
if (!is.null(id)){
leafletProxy("map") %>%  addPolygons(data=shapefile[ shapefile$COUNTYNS==id,], group="highlight",fillColor='red', fillOpacity = 0.5)
}
})
output$text <- renderText({input$map_shape_click$lat})
output$plot <- renderPlot({
o=Rbeast::beast(runif(10 ),season='none')
plot(o)
})
}
shinyApp(ui, server)
server <- function(input, output){
output$map <- renderLeaflet({
leaflet(shapefile) %>%
setView(lng =  -93.95508, lat = 41.7713, zoom = 8) %>% # center the map in Davis, CA
addPolygons(color     = "black", layerId = shapefile$COUNTYNS, weight =1,
fillColor = ~fill_color,
fillOpacity = 0.5) %>%
addMarkers(lng = -93.95508,
lat = 41.77131,
options = markerOptions(draggable = TRUE)) %>%
#addProviderTiles('Esri.WorldImagery') %>%
addTiles( )
})
observeEvent(input$map_marker_dragend, {
print(input$map_marker_dragend)
})
observeEvent(input$map_shape_click, {
print(input$map_shape_click$lat)
print(input$map_shape_click$lng)
leafletProxy("map") %>%  clearGroup(group="highlight")
id = input$map_shape_click$id
if (!is.null(id)){
leafletProxy("map") %>%  addPolygons(data=shapefile[ shapefile$COUNTYNS==id,], group="highlight",fillColor='red', fillOpacity = 0.5)
}
})
output$text <- renderText({input$map_shape_click$lat})
output$plot <- renderPlot({
id=input$map_shape_click$id
o=Rbeast::beast(runif(10 ),season='none')
plot(o)
})
}
shinyApp(ui, server)
shapefile =counties( cb = TRUE)
shapefile
shapefile <- sf::st_as_sf(shapefile)  %>% mutate(fill_color = if_else(ALAND>1386932347, "#1C00ff00", "#A9A9A9"))
ui <- fluidPage(
fluidRow(
column(7, leafletOutput(outputId = "map")),
column(5, plotOutput("plot")  )  ),
textOutput("text"),
)
ui <- fluidPage(
leafletOutput(outputId = "map"),
fluidRow(
column(6, plotOutput("plot1")),
column(6, plotOutput("plot2"))
),
textOutput("text"),
)
server <- function(input, output){
output$map <- renderLeaflet({
leaflet(shapefile) %>%
setView(lng =  -93.95508, lat = 41.7713, zoom = 8) %>% # center the map in Davis, CA
addPolygons(color     = "black", layerId = shapefile$COUNTYNS, weight =1,
fillColor = ~fill_color,
fillOpacity = 0.5) %>%
addMarkers(lng = -93.95508,
lat = 41.77131,
options = markerOptions(draggable = TRUE)) %>%
#addProviderTiles('Esri.WorldImagery') %>%
addTiles( )
})
observeEvent(input$map_marker_dragend, {
print(input$map_marker_dragend)
})
observeEvent(input$map_shape_click, {
print(input$map_shape_click$lat)
print(input$map_shape_click$lng)
leafletProxy("map") %>%  clearGroup(group="highlight")
id = input$map_shape_click$id
if (!is.null(id)){
leafletProxy("map") %>%  addPolygons(data=shapefile[ shapefile$COUNTYNS==id,], group="highlight",fillColor='red', fillOpacity = 0.5)
}
})
output$text <- renderText({input$map_shape_click$lat})
output$plot1 <- renderPlot({
id=input$map_shape_click$id
o=Rbeast::beast(runif(10 ),season='none')
plot(o)
})
}
shinyApp(ui, server)
shinyApp(ui, server)
install.packages('rmapshaper')
a=rmapshaper::ms_simplify(shapefile)
a
plot(a)
sf
?sf
plot(shapefile)
a=sf::st_simplify(shapefile)
plot(a)
plot(a)
plot(a[1,])
plot(shapefile[1,])
library(sf)
?st_simplify
a=sf::st_simplify(shapefile,dist=0.001)
?st_simplify
sf_use_s2()
a=sf::st_simplify(shapefile,dTolerance=100)
plot(a)
plot(a[1,])
a=sf::st_simplify(shapefile,dTolerance=500)
plot(a[1,])
b=shapefile
shapefile=a
server <- function(input, output){
output$map <- renderLeaflet({
leaflet(shapefile) %>%
setView(lng =  -93.95508, lat = 41.7713, zoom = 8) %>% # center the map in Davis, CA
addPolygons(color     = "black", layerId = shapefile$COUNTYNS, weight =1,
fillColor = ~fill_color,
fillOpacity = 0.5) %>%
addMarkers(lng = -93.95508,
lat = 41.77131,
options = markerOptions(draggable = TRUE)) %>%
#addProviderTiles('Esri.WorldImagery') %>%
addTiles( )
})
observeEvent(input$map_marker_dragend, {
print(input$map_marker_dragend)
})
observeEvent(input$map_shape_click, {
print(input$map_shape_click$lat)
print(input$map_shape_click$lng)
leafletProxy("map") %>%  clearGroup(group="highlight")
id = input$map_shape_click$id
if (!is.null(id)){
leafletProxy("map") %>%  addPolygons(data=shapefile[ shapefile$COUNTYNS==id,], group="highlight",fillColor='red', fillOpacity = 0.5)
}
})
output$text <- renderText({input$map_shape_click$lat})
output$plot1 <- renderPlot({
id=input$map_shape_click$id
o=Rbeast::beast(runif(10 ),season='none')
plot(o)
})
}
shinyApp(ui, server)
shapefile
st_as_sf(shapefile)
shapefile=st_as_sf(shapefile)
server <- function(input, output){
output$map <- renderLeaflet({
leaflet(shapefile) %>%
setView(lng =  -93.95508, lat = 41.7713, zoom = 8) %>% # center the map in Davis, CA
addPolygons(color     = "black", layerId = shapefile$COUNTYNS, weight =1,
fillColor = ~fill_color,
fillOpacity = 0.5) %>%
addMarkers(lng = -93.95508,
lat = 41.77131,
options = markerOptions(draggable = TRUE)) %>%
#addProviderTiles('Esri.WorldImagery') %>%
addTiles( )
})
observeEvent(input$map_marker_dragend, {
print(input$map_marker_dragend)
})
observeEvent(input$map_shape_click, {
print(input$map_shape_click$lat)
print(input$map_shape_click$lng)
leafletProxy("map") %>%  clearGroup(group="highlight")
id = input$map_shape_click$id
if (!is.null(id)){
leafletProxy("map") %>%  addPolygons(data=shapefile[ shapefile$COUNTYNS==id,], group="highlight",fillColor='red', fillOpacity = 0.5)
}
})
output$text <- renderText({input$map_shape_click$lat})
output$plot1 <- renderPlot({
id=input$map_shape_click$id
o=Rbeast::beast(runif(10 ),season='none')
plot(o)
})
}
shinyApp(ui, server)
class(b)
class(shapefile)
shapefile <- sf::st_as_sf(shapefile)  %>% mutate(fill_color = if_else(ALAND>1386932347, "#1C00ff00", "#A9A9A9"))
ui <- fluidPage(
leafletOutput(outputId = "map"),
fluidRow(
column(6, plotOutput("plot1")),
column(6, plotOutput("plot2"))
),
textOutput("text"),
)
server <- function(input, output){
output$map <- renderLeaflet({
leaflet(shapefile) %>%
setView(lng =  -93.95508, lat = 41.7713, zoom = 8) %>% # center the map in Davis, CA
addPolygons(color     = "black", layerId = shapefile$COUNTYNS, weight =1,
fillColor = ~fill_color,
fillOpacity = 0.5) %>%
addMarkers(lng = -93.95508,
lat = 41.77131,
options = markerOptions(draggable = TRUE)) %>%
#addProviderTiles('Esri.WorldImagery') %>%
addTiles( )
})
observeEvent(input$map_marker_dragend, {
print(input$map_marker_dragend)
})
observeEvent(input$map_shape_click, {
print(input$map_shape_click$lat)
print(input$map_shape_click$lng)
leafletProxy("map") %>%  clearGroup(group="highlight")
id = input$map_shape_click$id
if (!is.null(id)){
leafletProxy("map") %>%  addPolygons(data=shapefile[ shapefile$COUNTYNS==id,], group="highlight",fillColor='red', fillOpacity = 0.5)
}
})
output$text <- renderText({input$map_shape_click$lat})
output$plot1 <- renderPlot({
id=input$map_shape_click$id
o=Rbeast::beast(runif(10 ),season='none')
plot(o)
})
}
shinyApp(ui, server)
shapefile=b
shinyApp(ui, server)
shapefile
shapefile$geometry
a
shapefile$geometry
shapefile$geometry
shapefile$geometry
shapefile$geometry[10]
shapefile$geometry[110]
shapefile$geometry[111]
shapefile$geometry[20:100]
a$geometry
a$geometry[100]
a$geometry[1:100]
a$geometry[100]
a$geometry[101]
?leaflet
leaflet(shapefile)
leaflet(shapefile) %>%addPolygons(fillColor = 'red')
leaflet(a) %>%addPolygons(fillColor = 'red')
leaflet(a[1:100,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:900,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:1000,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:2000,]) %>%addPolygons(fillColor = 'red')
a$STATE_NAME
unique(a$STATE_NAME)
name = shapefile$STATE_NAME
idx = name != 'Hawaii' &  name != 'Alaska' & name !="Commonwealth of the Northern Mariana Islands"
idx = name != 'Hawaii' &  name != 'Alaska' & name !="Commonwealth of the Northern Mariana Islands"& name !='Puerto Rico'  & name!="Guam"'
shapefile =
shapefile <- sf::st_as_sf(shapefile)  %>% mutate(fill_color = if_else(ALAND>1386932347, "#1C00ff00", "#A9A9A9"))
ui <- fluidPage(
fluidRow(
column(7, leafletOutput(outputId = "map")),
column(5, plotOutput("plot")  )  ),
textOutput("text"),
)
ui <- fluidPage(
leafletOutput(outputId = "map"),
fluidRow(
column(6, plotOutput("plot1")),
column(6, plotOutput("plot2"))
),
textOutput("text"),
)
server <- function(input, output){
output$map <- renderLeaflet({
leaflet(shapefile) %>%
setView(lng =  -93.95508, lat = 41.7713, zoom = 8) %>% # center the map in Davis, CA
addPolygons(color     = "black", layerId = shapefile$COUNTYNS, weight =1,
fillColor = ~fill_color,
fillOpacity = 0.5) %>%
addMarkers(lng = -93.95508,
lat = 41.77131,
options = markerOptions(draggable = TRUE)) %>%
#addProviderTiles('Esri.WorldImagery') %>%
idx = name != 'Hawaii' &  name != 'Alaska' & name !="Commonwealth of the Northern Mariana Islands"& name !='Puerto Rico'  & name!="Guam"
shapefile = shapefile[idx,]
a=st_simplify(shapefile,dTolerance = 1000);
leaflet(a[1:1000,]) %>%addPolygons(fillColor = 'red')
unique(shapefile$STATE_NAME)
idx = name != 'Hawaii' &  name != 'Alaska' & name !="Commonwealth of the Northern Mariana Islands"& name !='Puerto Rico'  & name!="Guam"
& name!="United States Virgin Islands"
idx = name != 'Hawaii' &  name != 'Alaska' & name !="Commonwealth of the Northern Mariana Islands"& name !='Puerto Rico'  & name!="Guam"  & name!="United States Virgin Islands"
shapefile = shapefile[idx,]
a=st_simplify(shapefile,dTolerance = 1000);
leaflet(a[1:1000,]) %>%addPolygons(fillColor = 'red')
unique(a$STATE_NAME)
unique(shapefile$STATE_NAME)
idx = name != 'Hawaii' &  name != 'Alaska' & name !="Commonwealth of the Northern Mariana Islands"& name !='Puerto Rico'  & name!="Guam"  & name!="United States Virgin Islands" & !is.na(name)
shapefile = shapefile[idx,]
a=st_simplify(shapefile,dTolerance = 2000);
leaflet(a[1:1000,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:100,]) %>%addPolygons(fillColor = 'red')
a=st_simplify(shapefile,dTolerance = 2000, preserveTopology = F);
leaflet(a[1:100,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:1000,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:2000,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:200,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:300,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:400,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:600,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:800,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:900,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:1000,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:950,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:920,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:910,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:905,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:907,]) %>%addPolygons(fillColor = 'red')
leaflet(a[1:908,]) %>%addPolygons(fillColor = 'red')
leaflet(a[908,]) %>%addPolygons(fillColor = 'red')
a[908,1]
a[908,]
idx = name != 'Hawaii' &  name != 'Alaska' & name !="Commonwealth of the Northern Mariana Islands"& name !='Puerto Rico'  & name!="Guam"  & name!="United States Virgin Islands" & !is.na(name) & name != 'American Samoa'
shapefile = shapefile[idx,]
a=st_simplify(shapefile,dTolerance = 2000, preserveTopology = F);
leaflet(a[1:1907,]) %>%addPolygons(fillColor = 'red')
a[908,]
a$geometry
is.empty(a$geometry)
a$geometry
a$geometry[1]
a$geometry[10]
leaflet(a[1:907,]) %>%addPolygons(fillColor = 'red')
length(a$geometry[1])
length(a$geometry[2])
length(a$geometry[[1]])
length(a$geometry[[2]])
length(a$geometry[[3]])
length(a$geometry[[7]])
b=a %>% filter(!st_is_empty(.))
leaflet(b) %>%addPolygons(fillColor = 'red')
b$STATE_NAME
unique(b$STATE_NAME)
idx = name != 'Hawaii' &  name != 'Alaska' & name !="Commonwealth of the Northern Mariana Islands"& name !='Puerto Rico'  & name!="Guam"  & name!="United States Virgin Islands" & !is.na(name) & name != 'American Samoa'
shapefile = shapefile[idx,]
a=st_simplify(shapefile,dTolerance = 2000, preserveTopology = F);
b=a %>% filter(!st_is_empty(.))
leaflet(b) %>%addPolygons(fillColor = 'red')
name = shapefile$STATE_NAME
idx = name != 'Hawaii' &  name != 'Alaska' & name !="Commonwealth of the Northern Mariana Islands"& name !='Puerto Rico'  & name!="Guam"  & name!="United States Virgin Islands" & !is.na(name) & name != 'American Samoa'
shapefile = shapefile[idx,]
unique(shapefile$STATE_NAME)
a=st_simplify(shapefile,dTolerance = 2000, preserveTopology = F);
b=a %>% filter(!st_is_empty(.))
leaflet(b) %>%addPolygons(fillColor = 'red')
b=a %>% filter(!st_is_empty(.))
> leaflet(b) %>%addPolygons(fillColor = 'red',width=1)
leaflet(b) %>%addPolygons(fillColor = 'red',width=1)
leaflet(b) %>%addPolygons(fillColor = 'red',weight=1)
a=st_simplify(shapefile,dTolerance = 5000, preserveTopology = F);
b=a %>% filter(!st_is_empty(.))
leaflet(b) %>%addPolygons(fillColor = 'red',weight=1)
shapefile = shapefile[idx,]
a=st_simplify(shapefile,dTolerance = 10000, preserveTopology = F);
b=a %>% filter(!st_is_empty(.))
leaflet(b) %>%addPolygons(fillColor = 'red',weight=1)
st_centroid(shapefile)
plot(st_centroid(shapefile))
#a=st_simplify(shapefile,dTolerance = 10000, preserveTopology = F);
#b=a %>% filter(!st_is_empty(.))
b= st_centroid(shapefile)
leaflet(b) %>%addPolygons(fillColor = 'red',weight=1)
leaflet(b) %>%addMaker(fillColor = 'red',weight=1)
leaflet(b) %>%addMarker(fillColor = 'red',weight=1)
leaflet(b) %>%addMarkers(fillColor = 'red',weight=1)
leaflet(b) %>%addMarkers()
leaflet(b) %>%addCircleMarkers()
#a=st_simplify(shapefile,dTolerance = 10000, preserveTopology = F);
#b=a %>% filter(!st_is_empty(.))
uscentroid= st_centroid(shapefile)
server <- function(input, output){
output$map <- renderLeaflet({
leaflet(uscentroid) %>%
setView(lng =  -93.95508, lat = 41.7713, zoom = 8) %>% # center the map in Davis, CA
#addPolygons(color     = "black", layerId = shapefile$COUNTYNS, weight =1,
#            fillColor = ~fill_color,  fillOpacity = 0.5) %>%
#  addMarkers(lng = -93.95508,
#           lat = 41.77131,
#           options = markerOptions(draggable = TRUE)) %>%
addCircleMarkers() %>%
#addProviderTiles('Esri.WorldImagery') %>%
addTiles( )
})
observeEvent(input$map_marker_dragend, {
print(input$map_marker_dragend)
})
observeEvent(input$map_shape_click, {
print(input$map_shape_click$lat)
print(input$map_shape_click$lng)
leafletProxy("map") %>%  clearGroup(group="highlight")
id = input$map_shape_click$id
if (!is.null(id)){
leafletProxy("map") %>%  addPolygons(data=shapefile[ shapefile$COUNTYNS==id,], group="highlight",fillColor='red', fillOpacity = 0.5)
}
})
output$text <- renderText({input$map_shape_click$lat})
output$plot1 <- renderPlot({
id=input$map_shape_click$id
o=Rbeast::beast(runif(10 ),season='none')
plot(o)
})
}
shinyApp(ui, server)
server <- function(input, output){
output$map <- renderLeaflet({
leaflet(uscentroid) %>%
setView(lng =  -93.95508, lat = 41.7713, zoom = 8) %>% # center the map in Davis, CA
#addPolygons(color     = "black", layerId = shapefile$COUNTYNS, weight =1,
#            fillColor = ~fill_color,  fillOpacity = 0.5) %>%
#  addMarkers(lng = -93.95508,
#           lat = 41.77131,
#           options = markerOptions(draggable = TRUE)) %>%
addCircleMarkers(layerId = uscentroid$COUNTYNS ) %>%
#addProviderTiles('Esri.WorldImagery') %>%
addTiles( )
})
observeEvent(input$map_marker_dragend, {
print(input$map_marker_dragend)
})
observeEvent(input$map_shape_click, {
print(input$map_shape_click$lat)
print(input$map_shape_click$lng)
leafletProxy("map") %>%  clearGroup(group="highlight")
id = input$map_shape_click$id
if (!is.null(id)){
leafletProxy("map") %>%  addPolygons(data=shapefile[ shapefile$COUNTYNS==id,], group="highlight",fillColor='red', fillOpacity = 0.5)
}
})
output$text <- renderText({input$map_shape_click$lat})
output$plot1 <- renderPlot({
id=input$map_shape_click$id
o=Rbeast::beast(runif(10 ),season='none')
plot(o)
})
}
shinyApp(ui, server)
server <- function(input, output){
output$map <- renderLeaflet({
leaflet(uscentroid) %>%
setView(lng =  -93.95508, lat = 41.7713, zoom = 8) %>% # center the map in Davis, CA
#addPolygons(color     = "black", layerId = shapefile$COUNTYNS, weight =1,
#            fillColor = ~fill_color,  fillOpacity = 0.5) %>%
#  addMarkers(lng = -93.95508,
#           lat = 41.77131,
#           options = markerOptions(draggable = TRUE)) %>%
addCircleMarkers(layerId = uscentroid$COUNTYNS ) %>%
#addProviderTiles('Esri.WorldImagery') %>%
addTiles( )
})
observeEvent(input$map_marker_dragend, {
print(input$map_marker_dragend)
})
observeEvent(input$map_shape_click, {
print(input$map_shape_click$lat)
print(input$map_shape_click$lng)
leafletProxy("map") %>%  clearGroup(group="highlight")
id = input$map_shape_click$id
if (!is.null(id)){
leafletProxy("map") %>%  addPolygons(data=shapefile[ shapefile$COUNTYNS==id,], group="highlight",fillColor='red', fillOpacity = 0.5)
}
})
observeEvent(input$map_marker_click, {
print(input$map_shape_click$lat)
print(input$map_shape_click$lng)
leafletProxy("map") %>%  clearGroup(group="highlight")
id = input$map_shape_click$id
if (!is.null(id)){
leafletProxy("map") %>%  addPolygons(data=shapefile[ shapefile$COUNTYNS==id,], group="highlight",fillColor='red', fillOpacity = 0.5)
}
})
output$text <- renderText({input$map_shape_click$lat})
output$plot1 <- renderPlot({
id=input$map_shape_click$id
o=Rbeast::beast(runif(10 ),season='none')
plot(o)
})
}
shinyApp(ui, server)
setwd("F:\\rpk\\Rbeast")
devtools::load_all()      
q()
